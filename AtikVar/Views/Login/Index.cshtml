@{
    ViewBag.Title = "Giriş Yap";
}
<div class="row">
    <div class="col-lg-12">
        <div class="jumbotron bg-light">
            <h1 class="display-4">Giriş Formu</h1>
            <hr class="my-4">
            @if (ViewBag.message != null)
            {
                <div class="alert alert-info">
                    @ViewBag.message
                </div>
            }
            <h4 class="lead my-4">Giriş Bilgileri</h4>
            <form action="@Url.Action("Index","Login")" class="needs-validation" method="post" novalidate>
                <div class="form-group">
                    <label for="kullaniciAdi">Kullanıcı Adı</label>
                    <input type="text" name="kullaniciAdi" class="form-control" id="kullaniciAdi" required>
                    <div class="invalid-feedback">
                        Lütfen kullanıcı adını giriniz
                    </div>
                    <div class="valid-feedback">
                        Tamam
                    </div>
                </div>
                <div class="form-group">
                    <label for="sifre">Password</label>
                    <input type="password" class="form-control" name="sifre" min="8" id="sifre" required>
                    <div class="invalid-feedback">
                        Lütfen minimum 8 karekterli bir şifre giriniz
                    </div>
                    <div class="valid-feedback">
                        Tamam
                    </div>
                </div>
                <button type="submit" class="btn btn-outline-info btn-lg"><i class="fa fa-user"></i> Giriş Yap</button>
            </form>
            <script>
                // Example starter JavaScript for disabling form submissions if there are invalid fields
                (function() {
                  'use strict';
                  window.addEventListener('load', function() {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function(form) {
                      form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                          event.preventDefault();
                          event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                      }, false);
                    });
                  }, false);
                })();
            </script>
        </div>
    </div>
</div>
